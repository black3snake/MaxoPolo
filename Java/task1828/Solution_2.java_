package com.javarush.task.task18.task1828;

/* 
Прайсы 2
*/

import java.io.*;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String fileName = reader.readLine();
        FileInputStream fileInputStream = new FileInputStream(fileName);
        BufferedReader br = new BufferedReader(new InputStreamReader(fileInputStream,"windows-1251"));
        reader.close();
        Map<Long, String> map = new HashMap<>();
        if(args.length > 0) {
                String str, str2, stroka, prodN;
                long MAX = 0, lmaxl;
                long id = Long.parseLong(args[1]);
                float price;
                int quantity;
            if (args.length > 2) {
                StringBuilder sbArg = new StringBuilder();
                for (int i = 2; i < args.length - 2; i++) {
                    sbArg.append(args[i]).append(" ");
                }
                prodN = sbArg.toString().trim();
                price = Float.parseFloat(args[args.length - 2]);
                quantity = Integer.parseInt(args[args.length - 1]);

                while ((str = br.readLine()) != null && !str.equals("")) {
                    StringBuilder sb = new StringBuilder(str);
                    str2 = sb.substring(0, 8).trim();
                    stroka = sb.substring(8, 43).trim();
                    lmaxl = Long.parseLong(str2);
                    sb.delete(0, sb.length());
                    if (MAX < lmaxl) {
                        MAX = lmaxl;
                    }
                    map.put(lmaxl, stroka + "\r\n");
                }
            }
            br.close();
            fileInputStream.close();

            switch (args[0]) {
                case "-d":
                    for (Iterator<Map.Entry<Long,String>> it = map.entrySet().iterator(); it.hasNext();) {
                        Map.Entry<Long,String> pair = it.next();
                        Long key = pair.getKey();
                        if (id == key) it.remove();
                    }
                    //writeFileMap(map,fileName,MAX,prodN,price,quantity);
                    writeFileMap(map,fileName);

                    break;
                case "-u":


                    break;
                default:
                    System.out.println("Нужно использовать -u(изменить), -d(удалить).");
            }
        } else {
            System.out.println("Введите Аргументы..");
        }
    }
    //public static void writeFileMap(Map<Long,String> mapin, String fileName,Long MAX,String prodN,float price,int quantity) throws IOException {
    public static void writeFileMap(Map<Long,String> mapin, String fileName) throws IOException {

        FileOutputStream fileOutputStream = new FileOutputStream(fileName);
        BufferedWriter out = new BufferedWriter(new OutputStreamWriter(fileOutputStream,"windows-1251"));

        //String forma = String.format("%-8d%-30s%-8.2f%-4d\r\n",MAX+1,prodN ,price,quantity);
        /*String forma = String.format("%-30s%-8.2f%-4d\r\n",prodN ,price,quantity);
        mapin.put(MAX+1,forma);*/

        for (Map.Entry<Long,String> pair: mapin.entrySet()) {
            Long id = pair.getKey();
            String strokaM = pair.getValue();
            String formaEnd = String.format("%-8d",id)+strokaM;
            out.write(formaEnd);
        }
        out.close();
    }
}
